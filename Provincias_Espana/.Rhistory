summary(model_dummy)
anova(model_dummy)
f_dummy=update(f.reduc,.~.+Special.offer)
model_dummy=lm(f_dummy,data=data)
(RSSD=round(anova(model_dummy)[4,2],d=4))
formula(model_dummy)
summary(model_dummy)
###########################
# Different residual sun of squares
########################
round(cbind(RSS_reduced,RSS,RSS0,RSS1,RSS0+RSS1,RSSD),d=4)
############################
# H0:Same slope parameters
#########################
anova(model_dummy,model_2_full)
lht(model_dummy,c("Special.offer=0"))
round(summary(model_dummy)$coeff,d=4)
t=as.matrix(data.frame(summary(model_dummy)$coeff)[,3])[2]
round(cbind(t*t,anova(model.reduc,model_dummy)$F[2]),d=4)
t
round(summary(model_dummy)$coeff,d=4)
t=as.matrix(data.frame(summary(model_dummy)$coeff)[,3])[2]
t
t=as.matrix(data.frame(summary(model_dummy)$coeff)[,3])[4]
t
round(cbind(t*t,anova(model.reduc,model_dummy)$F[2]),d=4)
(sal.0 = read.table('G:\\UC3M\\UC3m\\Predicciones\\class_3\\data\\salary.txt', h = T));
##########################
# remove outlier at row 33
##########################
sal = sal.0[-33, ];
rownames(sal) = c(1:45);
sal
cat('', sep = '\n'); str(sal);
cat('', sep = '\n'); (n = nrow(sal));
sal = transform(sal,
S = S/1E3, E = as.factor(E),
M = as.factor(M), class = as.factor(E + 3*M));
names(sal)[1:4] = c('salx1000',
'years',
'educ',
'man');
sal
cat('', sep = '\n'); str(sal);
cat('', sep = '\n'); head(sal, n = 10);
###############################
# [3] initial scatter plot (!?)
###############################
xrange = with(sal, range(years));
yrange = with(sal,range(salx1000));
attach(sal)
windows();
plot(c(min(years)-1,max(years)),
c(min(salx1000), max(salx1000)+3),
type = 'n',
xlab = 'years',
ylab = 'salx1000',
main = 'correspondence of points to classes (!?)');
points(years,salx1000);
###########################
# [4] scatter plot by class
###########################
nclass = max(as.integer(class));
colors = rainbow(nclass);
linetype = c(1:nclass);
plotchar = c(15:20);
windows();
par(lwd = 2.,
font.lab = 2, cex.lab = 1.1,
font.main = 2, cex.main = 1.4,
col.main = 'deepskyblue');
plot(c(min(years)-1,max(years)),
c(min(salx1000), max(salx1000)+3),
type = 'n',
xlab = 'years',
ylab = 'salx1000',
main = 'Salary example');
for (i in 1:nclass)
{
par(cex = 1.5,
col = colors[i],
lty = linetype[i],
pch = plotchar[i],
lwd = 3.5);
sal. = subset(sal, class == as.character(i));
with(sal.,
lines(years, salx1000, type = 'b'));
rm(sal.);
}
par(col = 'black',
bg = 'ghostwhite',
lty = 1,
lwd = 1);
legend(min(years)-1., max(salx1000)+3.,
h = T,
xjust = 0,
cex = 0.6,
pt.cex = 0.9,
1:nclass,
col = colors,
pch = plotchar,
lty = linetype,
lwd = rep(2.,6),
title = 'class',
text.font = 2);
detach(sal)
legend(min(years)-1., max(salx1000)+3.,
h = T,
xjust = 0,
cex = 0.6,
pt.cex = 0.9,
1:nclass,
col = colors,
pch = plotchar,
lty = linetype,
lwd = rep(2.,6),
title = 'class',
text.font = 2);
detach(sal)
options(show.signif.stars = FALSE);
f.exp = salx1000 ~ class + class:years - 1;
model.exp = lm(f.exp,sal);
coef.exp = with(summary(model.exp), coefficients);
cat('', sep = '\n'); format(round(coef.exp, d = 4)); cat('', sep = '\n');
#####################################
# [9] ls in reduced 7-parameter model
#####################################
f.red = salx1000 ~ class + years - 1;
model.red = lm(f.red, sal);
coef.red = with(summary(model.red), coefficients);
cat('', sep = '\n'); format(round(coef.red, d = 4));
###########################
# [10] comparison of models
###########################
cat('', sep = '\n'); (hip = anova(model.red,model.exp));
cat('', sep = '\n'); str(hip);
cat('', sep = '\n'); round(with(hip,RSS), d = 4);
###########################
# [11] comparison of models
###########################
f.0 = salx1000 ~ years;
model.0 = lm(f.0,sal);
coef.0 = with(summary(model.0), coefficients);
cat('', sep = '\n'); format(round(coef.0, d = 4));
cat('', sep = '\n'); (hip = anova(model.0,model.red));
cat('', sep = '\n');  round(with(hip,RSS), d = 4);
#####################
# [12] residual plots
#####################
library(car);
windows();
par(mfrow = c(2,2),
oma = c(2,2,3,2));
residualPlots(model.exp,
type = 'rstudent',
tests = FALSE,
quadratic = FALSE,
terms = ~ 1,
ask = FALSE,
col = 'navy',
pch = 19,
cex = 1.5,
font.lab = 2);
title('12 parameter model.exp', font.main = 2, cex.main = 1.2,
col.main = 'royalblue3');
residualPlots(model.red,
type = 'rstudent',
tests = FALSE,
quadratic = FALSE,
terms = ~ 1,
ask = FALSE,
col = 'firebrick1',
pch = 19,
cex = 1.5,
font.lab = 2);
title('7 parameter model.red', font.main = 2, cex.main = 1.2,
col.main = 'royalblue3');
residualPlots(model.0,
type = 'rstudent',
tests = FALSE,
quadratic = FALSE,
terms = ~ 1,
ask = FALSE,
col = 'mediumseagreen',
pch = 19,
cex = 1.5,
font.lab = 2);
title('salx1000 ~ years', font.main = 2, cex.main = 1.2,
col.main = 'royalblue3');
library(Matrix)
cat('', sep = '\n'); (X.exp = model.matrix(model.exp)[,]); cat('', sep = '\n');
cat('', sep = '\n'); rankMatrix(X.exp)[1]; cat('', sep = '\n');
cat('', sep = '\n'); (X.red = model.matrix(model.red)[,]); cat('', sep = '\n');
cat('', sep = '\n'); rankMatrix(X.red)[1]; cat('', sep = '\n');
cat('', sep = '\n'); (X = model.matrix(model.0)[,]); cat('', sep = '\n');
cat('', sep = '\n'); rankMatrix(X)[1]; cat('', sep = '\n');
rankMatrix(X.exp)
es.salx1000 = residuals(lm(salx1000 ~ class, sal));
res.years = residuals(lm(years ~ class, sal));
windows(); plot(res.years, res.salx1000, col = 'navy',
pch = 19, cex = 1.5, main = 'salx1000 ~ years (decategorized)');
res.salx1000 = residuals(lm(salx1000 ~ class, sal));
res.years = residuals(lm(years ~ class, sal));
windows(); plot(res.years, res.salx1000, col = 'navy',
pch = 19, cex = 1.5, main = 'salx1000 ~ years (decategorized)');
cat('', sep = '\n'); coef(lm(res.salx1000 ~ res.years - 1));
cat('', sep = '\n'); coef(model.red)[7]
library("igraph", lib.loc="D:/R/R_Instalacion/R-3.3.1/library")
tr <- make_tree(40, children = 3, mode = "undirected")
plot(tr)
tr <- make_tree(40, children = 2, mode = "undirected")
plot(tr)
plot(tr,vertex.size=9,vertex.label=NA)
tr <- make_tree(40, children = 4, mode = "undirected")
plot(tr,vertex.size=5,vertex.label=NA)
tr <- make_tree(100, children = 4, mode = "undirected")
plot(tr,vertex.size=5,vertex.label=NA)
tr <- make_tree(100, children = 5, mode = "undirected")
plot(tr,vertex.size=5,vertex.label=NA)
tr <- make_tree(100, children = 6, mode = "undirected")
plot(tr,vertex.size=5,vertex.label=NA)
library("igraph", lib.loc="D:/R/R_Instalacion/R-3.3.1/library")
rn.neigh = connect.neighborhood(rn, 5)
rn.neigh = connect.neighborhood(10, 2)
rn <- make_ring(40)
rn.neigh = connect.neighborhood(rn, 2)
plot(rn, vertex.size=10, vertex.label=NA)
rn.neigh = connect.neighborhood(rn, 3)
plot(rn, vertex.size=10, vertex.label=NA)
rn.neigh = connect.neighborhood(rn, 5)
plot(rn, vertex.size=5, vertex.label=NA)
plot(rn.neigh, vertex.size=5, vertex.label=NA)
rn.neigh = connect.neighborhood(rn, 3)
plot(rn.neigh, vertex.size=5, vertex.label=NA)
rn <- make_ring(20)
rn.neigh = connect.neighborhood(rn, 3)
plot(rn.neigh, vertex.size=5, vertex.label=NA)
rn <- make_ring(8)
rn.neigh = connect.neighborhood(rn, 3)
plot(rn.neigh, vertex.size=5, vertex.label=NA)
if(!require(maptools)){install.packages('maptools');require(maptools)}
#setwd('E:\\R\\Catografia_INE\\provincias\\')
setwd('D:\\R\mapas\\ProvinciasEspana')
spain.pro<-readShapePoly(fn='PROV_S_20150101_01_R_INE')
plot(spain.pro,axes=TRUE)
data<-read.csv("E:\\R\\Catografia_INE\\PobPro.csv",header = T,dec = ".",sep = ";",
colClasses = c("factor","numeric"))
data.tmp<-merge(spain.pro@data,data, by="CPRO")
spain.pro@data$Pob2016<-data.tmp$Pob2016
peninsula<-subset(spain.pro,!spain.pro$NCA=="Canarias")
Canarias<- subset(spain.pro,spain.pro$NCA=="Canarias")
plot(peninsula)
plot(Canarias)
dy <- bbox(peninsula)[2,1] - bbox(Canarias)[2,1]
dx <- bbox(peninsula)[1,2] - bbox(Canarias)[1,2]
Canarias2 <- elide(Canarias, shift=c(dx, dy))
espPols <- rbind(peninsula, Canarias2)
plot(espPols)
z<-bbox(Canarias2)
f<-0
#rect(z[1,1]-f*z[1,1],z[2,1]-f*z[2,1],z[1,2]+f*z[1,2],z[2,2]+f*z[2,2])
lines(c(z[1,1]-f*z[1,1],z[1,1]-f*z[1,1],z[1,2]+f*z[1,2]),
c(z[2,1]-f*z[2,1],z[2,2]+f*z[2,2],z[2,2]+f*z[2,2]),lwd=2)
#Calculo los centroides
centroides <- coordinates(espPols)
plot(espPols)
text(centroides,espPols$CPRO,cex=0.7)
if(!require(maptools)){install.packages('maptools');require(maptools)}
#setwd('E:\\R\\Catografia_INE\\provincias\\')
setwd('D:\\R\mapas\\ProvinciasEspana')
setwd('D:\\R\\mapas\\ProvinciasEspana')
spain.pro<-readShapePoly(fn='PROV_S_20150101_01_R_INE')
plot(spain.pro,axes=TRUE)
data<-read.csv("E:\\R\\Catografia_INE\\PobPro.csv",header = T,dec = ".",sep = ";",
colClasses = c("factor","numeric"))
data.tmp<-merge(spain.pro@data,data, by="CPRO")
spain.pro@data$Pob2016<-data.tmp$Pob2016
data<-read.csv("D:\\R\mapas\\PobPro.csv",header = T,dec = ".",sep = ";",
colClasses = c("factor","numeric"))
data<-read.csv("D:\\R\mapas\\PobPro.csv",header = T,dec = ".",sep = ";",
colClasses = c("factor","numeric"))
data<-read.csv("D:\\R\\mapas\\PobPro.csv",header = T,dec = ".",sep = ";",colClasses = c("factor","numeric"))
if(!require(maptools)){install.packages('maptools');require(maptools)}
#setwd('E:\\R\\Catografia_INE\\provincias\\')
setwd('D:\\R\\mapas\\ProvinciasEspana')
spain.pro<-readShapePoly(fn='PROV_S_20150101_01_R_INE')
plot(spain.pro,axes=TRUE)
# data<-read.csv("E:\\R\\Catografia_INE\\PobPro.csv",header = T,dec = ".",sep = ";",
#                colClasses = c("factor","numeric"))
data<-read.csv("D:\\R\\mapas\\PobPro.csv",header = T,dec = ".",sep = ";",colClasses = c("factor","numeric"))
data.tmp<-merge(spain.pro@data,data, by="CPRO")
spain.pro@data$Pob2016<-data.tmp$Pob2016
if(!require(maptools)){install.packages('maptools');require(maptools)}
#setwd('E:\\R\\Catografia_INE\\provincias\\')
setwd('D:\\R\\mapas\\ProvinciasEspana')
spain.pro<-readShapePoly(fn='PROV_S_20150101_01_R_INE')
plot(spain.pro,axes=TRUE)
# data<-read.csv("E:\\R\\Catografia_INE\\PobPro.csv",header = T,dec = ".",sep = ";",
#                colClasses = c("factor","numeric"))
data<-read.csv("D:\\R\\mapas\\PobPro.csv",header = T,dec = ".",sep = ";",colClasses = c("factor","numeric"))
data.tmp<-merge(spain.pro@data,data, by="CPRO")
spain.pro@data$Pob2016<-data.tmp$Pob2016
#saco solo los elementos de la península
peninsula<-subset(spain.pro,!spain.pro$NCA=="Canarias")
#Saco sólo los elementos de las islas
Canarias<- subset(spain.pro,spain.pro$NCA=="Canarias")
#plot(peninsula)
#plot(Canarias)
dy <- bbox(peninsula)[2,1] - bbox(Canarias)[2,1]
dx <- bbox(peninsula)[1,2] - bbox(Canarias)[1,2]
Canarias2 <- elide(Canarias, shift=c(dx, dy))
espPols <- rbind(peninsula, Canarias2)
plot(espPols)
#Hacemos las particiones de los datos
if(!require(classInt)){install.packages('classInt');require(classInt)}
n=7
if(!require(classInt)){install.packages('classInt');require(classInt)}
n=7
int<-classIntervals(espPols$Pob2016,n,style = "jenks")
#Genero la paleta de colores a utilizar
if(!require(RColorBrewer)){install.packages('RColorBrewer');require(RColorBrewer)}
pal<-brewer.pal(n,"Blues")
p<-spplot(espPols,col.regions=pal,at=signif(int$brks,digits = 2) ,main="Población 2016")
#text(centroides,espPols$CPRO)
p
int<-classIntervals(espPols$Pob2016,n,style = "jenks")
p
pal<-brewer.pal(n,"Blues")
pal<-brewer.pal(n,"Blues")
p<-spplot(espPols,col.regions=pal,at=signif(int$brks,digits = 2) ,
main="Población 2016",lwd=0.4,col='black')
int
int$brks
?signif
p<-spplot(espPols,espPols$Pob2016,col.regions=pal,at=signif(int$brks,digits = 2) ,
main="Población 2016",lwd=0.4,col='black')
p<-spplot(espPols,"espPols$Pob2016",col.regions=pal,at=signif(int$brks,digits = 2) ,
main="Población 2016",lwd=0.4,col='black')
#text(centroides,espPols$CPRO)
p<-spplot(espPols,"espPols$Pob2016",
main="Población 2016",lwd=0.4,col='black')
p<-spplot(espPols,espPols$Pob2016,
main="Población 2016",lwd=0.4,col='black')
espPols$Pob2016
if(!require(maptools)){install.packages('maptools');require(maptools)}
#setwd('E:\\R\\Catografia_INE\\provincias\\')
setwd('D:\\R\\mapas\\ProvinciasEspana')
spain.pro<-readShapePoly(fn='PROV_S_20150101_01_R_INE')
plot(spain.pro,axes=TRUE)
# data<-read.csv("E:\\R\\Catografia_INE\\PobPro.csv",header = T,dec = ".",sep = ";",
#                colClasses = c("factor","numeric"))
data<-read.csv("D:\\R\\mapas\\PobPro.csv",header = T,dec = ".",sep = ";",colClasses = c("factor","numeric"))
data.tmp<-merge(spain.pro@data,data, by="CPRO")
spain.pro@data$Pob2016<-data.tmp$Pob2016
#saco solo los elementos de la península
peninsula<-subset(spain.pro,!spain.pro$NCA=="Canarias")
#Saco sólo los elementos de las islas
Canarias<- subset(spain.pro,spain.pro$NCA=="Canarias")
#plot(peninsula)
#plot(Canarias)
dy <- bbox(peninsula)[2,1] - bbox(Canarias)[2,1]
dx <- bbox(peninsula)[1,2] - bbox(Canarias)[1,2]
Canarias2 <- elide(Canarias, shift=c(dx, dy))
espPols <- rbind(peninsula, Canarias2)
plot(espPols)
z<-bbox(Canarias2)
f<-0
#rect(z[1,1]-f*z[1,1],z[2,1]-f*z[2,1],z[1,2]+f*z[1,2],z[2,2]+f*z[2,2])
lines(c(z[1,1]-f*z[1,1],z[1,1]-f*z[1,1],z[1,2]+f*z[1,2]),
c(z[2,1]-f*z[2,1],z[2,2]+f*z[2,2],z[2,2]+f*z[2,2]),lwd=2)
#Calculo los centroides
centroides <- coordinates(espPols)
plot(espPols)
#Hacemos las particiones de los datos
if(!require(classInt)){install.packages('classInt');require(classInt)}
n=7
int<-classIntervals(espPols$Pob2016,n,style = "jenks")
#Genero la paleta de colores a utilizar
if(!require(RColorBrewer)){install.packages('RColorBrewer');require(RColorBrewer)}
pal<-brewer.pal(n,"Blues")
p<-spplot(espPols,espPols$Pob2016,
main="Población 2016",lwd=0.4,col='black')
p<-spplot(espPols,"Pob2016",
main="Población 2016",lwd=0.4,col='black')
p
p<-spplot(espPols,"Pob2016", col.regions=pal,
main="Población 2016",lwd=0.4,col='black')
p
p<-spplot(espPols,"Pob2016", col.regions=pal,at=signif(int$brks,digits = 2),
main="Población 2016",lwd=0.4,col='black')
p
z
ca<-list("sp.text",c(z[1,1],z[2,2]),"Islas Canarias")
p<-spplot(espPols,"Pob2016", col.regions=pal,at=signif(int$brks,digits = 2),
main="Población 2016",lwd=0.4,col='black',layout=list(ca))
p
p<-spplot(espPols,"Pob2016", col.regions=pal,at=signif(int$brks,digits = 2),
main="Población 2016",lwd=0.4,col='black',sp.layout=ca)
p
ca<-list("sp.text",c(z[1,1]*1.2,z[2,2]),"Islas Canarias")
p<-spplot(espPols,"Pob2016", col.regions=pal,at=signif(int$brks,digits = 2),
main="Población 2016",lwd=0.4,col='black',sp.layout=ca)
ca<-list("sp.text",c(z[1,1]*1.2,z[2,2]),"Islas Canarias")
p<-spplot(espPols,"Pob2016", col.regions=pal,at=signif(int$brks,digits = 2),
main="Población 2016",lwd=0.4,col='black',sp.layout=ca)
ca<-list("sp.text",c(z[1,1]*1.2,z[2,2]),"Islas Canarias")
p<-spplot(espPols,"Pob2016", col.regions=pal,at=signif(int$brks,digits = 2),
main="Población 2016",lwd=0.4,col='black',sp.layout=ca)
ca<-list("sp.text",c(z[1,1]*1.2,z[2,2]),"Islas Canarias")
p<-spplot(espPols,"Pob2016", col.regions=pal,at=signif(int$brks,digits = 2),
main="Población 2016",lwd=0.4,col='black',sp.layout=ca)
#text(centroides,espPols$CPRO)
p
ca<-list("sp.text",c(z[1,1]*1.4,z[2,2]),"Islas Canarias")
p<-spplot(espPols,"Pob2016", col.regions=pal,at=signif(int$brks,digits = 2),
main="Población 2016",lwd=0.4,col='black',sp.layout=ca)
#text(centroides,espPols$CPRO)
p
?? seasonplot
??seasonplot
if(!require(fpp)){install.packages('fpp');require(fpp)}
?seasonplot
plot(melsyd[,"Economy.Class"])
#Diapo 6
plot(a10)
seasonplot(melsyd[,"Economy.Class"])
seasonplot(melsyd[,"Economy.Class"],col= rainbow(10))
seasonplot(a10,col=rainbow(10))
?seasonplot
seasonplot(a10,col=rainbow(10),year.labels=T)
seasonplot(a10,col=rainbow(10),year.labels=T,cex=0.7)
seasonplot(a10,col=rainbow(10),year.labels=T,year.labels.left=T ,cex=0.7)
?monthplot
monthplot(melsyd[,"Economy.Class"])
monthplot(a10) #diapo 9
monthplot(a10,col=rainbow(12)) #diapo 9
monthplot(a10,col=rainbow(10)) #diapo 9
monthplot(a10,col='red')) #diapo 9
?monthplot
monthplot(a10,col.base='red')) #diapo 9
monthplot(a10,col.base='red') #diapo 9
monthplot(a10,col.base='red',col='blue') #diapo 9
monthplot(a10,col.base='red', col=rainbow(10)) #diapo 9
?window
beer<-window(ausbeer,start=1992)
plot(beer) #tiene pinta de ser la diapositiva 12
seasonplot(beer,year.labels = T)
seasonplot(beer,year.labels = T,col=rainbow(12))
seasonplot(beer,year.labels = T,col=rainbow(12),cex=0.7)
monthplot(beer)
monthplot(a10,col.base=red) #diapo 9
monthplot(a10,col.base="red") #diapo 9
monthplot(beer)
plot(elec)
plot(elec,main="Australian electricity production")
lag.plot(beer,lags=9)
lag.plot(beer,lags=9,do.lines = F)
acf(beer) #correlograma autocorrelacion
a<-acf(beer)
a$acf
L
res<-residuals(naive(dj)) #Naive es una función para predecir aqui saca los residuales
#Diapositiva 60
plot(dj)
plot(res)
acf(res)
acf(res)
res
?acf
acf(res,na.action=na.fail)
acf(res,na.action=na.pass)
histogram(res)
hist(res)
?hist
hist(res,freq=F,nclass=10)
hist(res,freq=F,nclass=20)
?Box.test
?stl
?stl
plot(decompose(hsales))
d<-decompose(hsales)
d$trend
plot(d$trend)
plot(hsales)
plot(d$trend,add=T)
?plot
plot(d$trend,add=T)
plot(hsales,add=T)
b<-decompose(hasales)
b<-decompose(hsales)
b<-decompose(hsales)
plot(hsales)
lines( b$trend )
lines( b$trend,col='red )
lines( b$trend,col='red' )
b<-decompose(hsales)
plot(hsales)
lines( b$trend,col='red' )
?stl
plot(decompose(hsales))
plot(stl(hsales,s.window = "periodic"))
plot(stl(hsales,s.window=15))
plot(elecequip) #Diapositiva 66
plot(stl(elecequip,s.window = 5))
fit<-stl(elecequip,s.window = 5)
monthplot(fit$time.series[,"seasonal"],ylab = "Seassonal")
fit<- stl(elecequip, t.window = 15,s.window = "periodic",robust = T)
plot(fit)
plot(hsales,col='gray')
fit<-stl(hsales,s.window=15)
hsales.sa<-seasadj(fit)
lines(hsales.sa,col="red")
